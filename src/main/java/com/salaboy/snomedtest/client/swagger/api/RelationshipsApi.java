/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.2).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.salaboy.snomedtest.client.swagger.api;

import com.salaboy.snomedtest.client.swagger.model.ItemsPageRelationship;
import com.salaboy.snomedtest.client.swagger.model.Relationship;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import javax.validation.Valid;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-03-20T12:04:47.405-03:00")

@Api(value = "Relationships", description = "the Relationships API")
public interface RelationshipsApi {

    @ApiOperation(value = "fetchRelationship", nickname = "fetchRelationshipUsingGET", notes = "", response = Relationship.class, tags={ "Relationships", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Relationship.class),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/{branch}/relationships/{relationshipId}",
        produces = "application/json", 
        consumes = "",
        method = RequestMethod.GET)
    ResponseEntity<Relationship> fetchRelationshipUsingGET(@ApiParam(value = "branch",required=true) @PathVariable("branch") String branch,@ApiParam(value = "relationshipId",required=true) @PathVariable("relationshipId") String relationshipId,@ApiParam(value = "Accept-Language" ,required=true, defaultValue="en-US;q=0.8,en-GB;q=0.6") @RequestHeader(value="Accept-Language", required=true) String acceptLanguage);


    @ApiOperation(value = "findRelationships", nickname = "findRelationshipsUsingGET", notes = "", response = ItemsPageRelationship.class, tags={ "Relationships", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ItemsPageRelationship.class),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/{branch}/relationships",
        produces = "application/json", 
        consumes = "",
        method = RequestMethod.GET)
    ResponseEntity<ItemsPageRelationship> findRelationshipsUsingGET(@ApiParam(value = "branch",required=true) @PathVariable("branch") String branch,@ApiParam(value = "Accept-Language" ,required=true, defaultValue="en-US;q=0.8,en-GB;q=0.6") @RequestHeader(value="Accept-Language", required=true) String acceptLanguage,@ApiParam(value = "active") @Valid @RequestParam(value = "active", required = false) Boolean active,@ApiParam(value = "module") @Valid @RequestParam(value = "module", required = false) String module,@ApiParam(value = "effectiveTime") @Valid @RequestParam(value = "effectiveTime", required = false) String effectiveTime,@ApiParam(value = "source") @Valid @RequestParam(value = "source", required = false) String source,@ApiParam(value = "type") @Valid @RequestParam(value = "type", required = false) String type,@ApiParam(value = "destination") @Valid @RequestParam(value = "destination", required = false) String destination,@ApiParam(value = "characteristicType", allowableValues = "STATED_RELATIONSHIP, INFERRED_RELATIONSHIP, ADDITIONAL_RELATIONSHIP") @Valid @RequestParam(value = "characteristicType", required = false) String characteristicType,@ApiParam(value = "group") @Valid @RequestParam(value = "group", required = false) Integer group,@ApiParam(value = "offset", defaultValue = "0") @Valid @RequestParam(value = "offset", required = false, defaultValue="0") Integer offset,@ApiParam(value = "limit", defaultValue = "50") @Valid @RequestParam(value = "limit", required = false, defaultValue="50") Integer limit);

}
