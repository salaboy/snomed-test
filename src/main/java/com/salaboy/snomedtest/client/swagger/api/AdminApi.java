/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.2).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.salaboy.snomedtest.client.swagger.api;

import com.salaboy.snomedtest.client.swagger.model.CodeSystem;
import com.salaboy.snomedtest.client.swagger.model.CreateCodeSystemVersionRequest;
import com.salaboy.snomedtest.client.swagger.model.ItemsPageCodeSystem;
import com.salaboy.snomedtest.client.swagger.model.ItemsPageCodeSystemVersion;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.validation.Valid;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-03-20T12:04:47.405-03:00")

@Api(value = "Admin", description = "the Admin API")
public interface AdminApi {

    @ApiOperation(value = "Create a code system", nickname = "createCodeSystemUsingPOST", notes = "", tags = {"Admin",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "OK"),
            @ApiResponse(code = 201, message = "Created"),
            @ApiResponse(code = 401, message = "Unauthorized"),
            @ApiResponse(code = 403, message = "Forbidden"),
            @ApiResponse(code = 404, message = "Not Found")})
    @RequestMapping(value = "/codesystems",
            produces = "application/json",
            consumes = "application/json",
            method = RequestMethod.POST)
    ResponseEntity<Void> createCodeSystemUsingPOST(@ApiParam(value = "codeSystem", required = true) @Valid @RequestBody CodeSystem codeSystem);


    @ApiOperation(value = "Create a new code system version", nickname = "createVersionUsingPOST", notes = "", tags = {"Admin",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "OK"),
            @ApiResponse(code = 201, message = "Created"),
            @ApiResponse(code = 401, message = "Unauthorized"),
            @ApiResponse(code = 403, message = "Forbidden"),
            @ApiResponse(code = 404, message = "Not Found")})
    @RequestMapping(value = "/codesystems/{shortName}/versions",
            produces = "application/json",
            consumes = "application/json",
            method = RequestMethod.POST)
    ResponseEntity<Void> createVersionUsingPOST(@ApiParam(value = "shortName", required = true) @PathVariable("shortName") String shortName, @ApiParam(value = "input", required = true) @Valid @RequestBody CreateCodeSystemVersionRequest input);


    @ApiOperation(value = "Retrieve all code systems", nickname = "findAllUsingGET", notes = "", response = ItemsPageCodeSystem.class, tags = {"Admin",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "OK", response = ItemsPageCodeSystem.class),
            @ApiResponse(code = 401, message = "Unauthorized"),
            @ApiResponse(code = 403, message = "Forbidden"),
            @ApiResponse(code = 404, message = "Not Found")})
    @RequestMapping(value = "/codesystems",
            produces = "application/json",
            consumes = "",
            method = RequestMethod.GET)
    ResponseEntity<ItemsPageCodeSystem> findAllUsingGET();


    @ApiOperation(value = "Retrieve all code system versions", nickname = "findAllVersionsUsingGET", notes = "", response = ItemsPageCodeSystemVersion.class, tags = {"Admin",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "OK", response = ItemsPageCodeSystemVersion.class),
            @ApiResponse(code = 401, message = "Unauthorized"),
            @ApiResponse(code = 403, message = "Forbidden"),
            @ApiResponse(code = 404, message = "Not Found")})
    @RequestMapping(value = "/codesystems/{shortName}/versions",
            produces = "application/json",
            consumes = "",
            method = RequestMethod.GET)
    ResponseEntity<ItemsPageCodeSystemVersion> findAllVersionsUsingGET(@ApiParam(value = "shortName", required = true) @PathVariable("shortName") String shortName);


    @ApiOperation(value = "Retrieve a code system", nickname = "findCodeSystemUsingGET", notes = "", response = CodeSystem.class, tags = {"Admin",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "OK", response = CodeSystem.class),
            @ApiResponse(code = 401, message = "Unauthorized"),
            @ApiResponse(code = 403, message = "Forbidden"),
            @ApiResponse(code = 404, message = "Not Found")})
    @RequestMapping(value = "/codesystems/{shortName}",
            produces = "application/json",
            consumes = "",
            method = RequestMethod.GET)
    ResponseEntity<CodeSystem> findCodeSystemUsingGET(@ApiParam(value = "shortName", required = true) @PathVariable("shortName") String shortName);

}
