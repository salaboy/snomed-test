/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.2).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.salaboy.snomedtest.client.swagger.api;

import com.salaboy.snomedtest.client.swagger.model.ItemsPageReferenceSetMember;
import com.salaboy.snomedtest.client.swagger.model.ReferenceSetMember;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import javax.validation.Valid;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-03-20T12:04:47.405-03:00")

@Api(value = "RefsetMembers", description = "the RefsetMembers API")
public interface RefsetMembersApi {

    @ApiOperation(value = "deleteMember", nickname = "deleteMemberUsingDELETE", notes = "", tags={ "Refset Members", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "No Content"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden") })
    @RequestMapping(value = "/{branch}/members/{uuid}",
        produces = "application/json", 
        consumes = "",
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteMemberUsingDELETE(@ApiParam(value = "branch",required=true) @PathVariable("branch") String branch,@ApiParam(value = "uuid",required=true) @PathVariable("uuid") String uuid);


    @ApiOperation(value = "fetchMember", nickname = "fetchMemberUsingGET", notes = "", response = ReferenceSetMember.class, tags={ "Refset Members", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ReferenceSetMember.class),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/{branch}/members/{uuid}",
        produces = "application/json", 
        consumes = "",
        method = RequestMethod.GET)
    ResponseEntity<ReferenceSetMember> fetchMemberUsingGET(@ApiParam(value = "branch",required=true) @PathVariable("branch") String branch,@ApiParam(value = "uuid",required=true) @PathVariable("uuid") String uuid,@ApiParam(value = "Accept-Language" ,required=true, defaultValue="en-US;q=0.8,en-GB;q=0.6") @RequestHeader(value="Accept-Language", required=true) String acceptLanguage);


    @ApiOperation(value = "findRefsetMembers", nickname = "findRefsetMembersUsingGET", notes = "", response = ItemsPageReferenceSetMember.class, tags={ "Refset Members", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ItemsPageReferenceSetMember.class),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/{branch}/members",
        produces = "application/json", 
        consumes = "",
        method = RequestMethod.GET)
    ResponseEntity<ItemsPageReferenceSetMember> findRefsetMembersUsingGET(@ApiParam(value = "branch",required=true) @PathVariable("branch") String branch,@ApiParam(value = "Accept-Language" ,required=true, defaultValue="en-US;q=0.8,en-GB;q=0.6") @RequestHeader(value="Accept-Language", required=true) String acceptLanguage,@ApiParam(value = "referenceSet") @Valid @RequestParam(value = "referenceSet", required = false) String referenceSet,@ApiParam(value = "referencedComponentId") @Valid @RequestParam(value = "referencedComponentId", required = false) String referencedComponentId,@ApiParam(value = "active") @Valid @RequestParam(value = "active", required = false) Boolean active,@ApiParam(value = "targetComponent") @Valid @RequestParam(value = "targetComponent", required = false) String targetComponent,@ApiParam(value = "mapTarget") @Valid @RequestParam(value = "mapTarget", required = false) String mapTarget,@ApiParam(value = "offset", defaultValue = "0") @Valid @RequestParam(value = "offset", required = false, defaultValue="0") Integer offset,@ApiParam(value = "limit", defaultValue = "50") @Valid @RequestParam(value = "limit", required = false, defaultValue="50") Integer limit);

}
