/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.2).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.salaboy.snomedtest.client.swagger.api;

import com.salaboy.snomedtest.client.swagger.model.Concept;
import com.salaboy.snomedtest.client.swagger.model.InvalidContent;

import java.util.List;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.validation.Valid;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-03-20T12:04:47.405-03:00")

@Api(value = "Validation", description = "the Validation API")
public interface ValidationApi {

    @ApiOperation(value = "Validation using the Snomed-Drools project.", nickname = "validateConceptUsingPOST", notes = "", response = InvalidContent.class, responseContainer = "List", tags={ "Validation", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = InvalidContent.class, responseContainer = "List"),
        @ApiResponse(code = 201, message = "Created"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/browser/{branch}/validate/concept",
        produces = "application/json", 
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<List<InvalidContent>> validateConceptUsingPOST(@ApiParam(value = "The branch path",required=true) @PathVariable("branch") String branch,@ApiParam(value = "The concept to validate"  )  @Valid @RequestBody Concept concept);


    @ApiOperation(value = "Validation using the Snomed-Drools project.", nickname = "validateConceptsUsingPOST", notes = "", response = InvalidContent.class, responseContainer = "List", tags={ "Validation", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = InvalidContent.class, responseContainer = "List"),
        @ApiResponse(code = 201, message = "Created"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/browser/{branch}/validate/concepts",
        produces = "application/json", 
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<List<InvalidContent>> validateConceptsUsingPOST(@ApiParam(value = "The branch path",required=true) @PathVariable("branch") String branch,@ApiParam(value = "The concepts to validate"  )  @Valid @RequestBody List<Concept> concepts);

}
