/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.2).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.salaboy.snomedtest.client.swagger.api;

import com.salaboy.snomedtest.client.swagger.model.ImportCreationRequest;
import com.salaboy.snomedtest.client.swagger.model.ImportJob;
import com.salaboy.snomedtest.client.swagger.model.ImportPatchCreationRequest;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-03-20T12:04:47.405-03:00")

@Api(value = "Import", description = "the Import API")
public interface ImportApi {

    @ApiOperation(value = "createImportJob", nickname = "createImportJobUsingPOST", notes = "", tags={ "Import", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK"),
        @ApiResponse(code = 201, message = "Created"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/imports",
        produces = "application/json", 
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<Void> createImportJobUsingPOST(@ApiParam(value = "importRequest" ,required=true )  @Valid @RequestBody ImportCreationRequest importRequest);


    @ApiOperation(value = "createReleasePatchImportJob", nickname = "createReleasePatchImportJobUsingPOST", notes = "", tags={ "Import", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK"),
        @ApiResponse(code = 201, message = "Created"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/imports/release-patch",
        produces = "application/json", 
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<Void> createReleasePatchImportJobUsingPOST(@ApiParam(value = "importPatchRequest" ,required=true )  @Valid @RequestBody ImportPatchCreationRequest importPatchRequest);


    @ApiOperation(value = "getImportJob", nickname = "getImportJobUsingGET", notes = "", response = ImportJob.class, tags={ "Import", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ImportJob.class),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/imports/{importId}",
        produces = "application/json", 
        consumes = "",
        method = RequestMethod.GET)
    ResponseEntity<ImportJob> getImportJobUsingGET(@ApiParam(value = "importId",required=true) @PathVariable("importId") String importId);


    @ApiOperation(value = "uploadImportRf2Archive", nickname = "uploadImportRf2ArchiveUsingPOST", notes = "", tags={ "Import", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK"),
        @ApiResponse(code = 201, message = "Created"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/imports/{importId}/archive",
        produces = "application/json", 
        consumes = "multipart/form-data",
        method = RequestMethod.POST)
    ResponseEntity<Void> uploadImportRf2ArchiveUsingPOST(@ApiParam(value = "importId",required=true) @PathVariable("importId") String importId,@ApiParam(value = "file detail") @RequestParam("file") MultipartFile file);

}
