/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.2).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.salaboy.snomedtest.client.swagger.api;

import com.salaboy.snomedtest.client.swagger.model.Description;
import com.salaboy.snomedtest.client.swagger.model.ItemsPageDescription;
import com.salaboy.snomedtest.client.swagger.model.PageBrowserDescriptionSearchResult;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import javax.validation.Valid;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-03-20T12:04:47.405-03:00")

@Api(value = "Descriptions", description = "the Descriptions API")
public interface DescriptionsApi {

    @ApiOperation(value = "fetchDescription", nickname = "fetchDescriptionUsingGET", notes = "", response = Description.class, tags={ "Descriptions", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Description.class),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/{branch}/descriptions/{descriptionId}",
        produces = "application/json", 
        consumes = "",
        method = RequestMethod.GET)
    ResponseEntity<Description> fetchDescriptionUsingGET(@ApiParam(value = "branch",required=true) @PathVariable("branch") String branch,@ApiParam(value = "descriptionId",required=true) @PathVariable("descriptionId") String descriptionId);


    @ApiOperation(value = "findBrowserDescriptions", nickname = "findBrowserDescriptionsUsingGET", notes = "", response = PageBrowserDescriptionSearchResult.class, tags={ "Descriptions", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = PageBrowserDescriptionSearchResult.class),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/browser/{branch}/descriptions",
        produces = "application/json", 
        consumes = "",
        method = RequestMethod.GET)
    ResponseEntity<PageBrowserDescriptionSearchResult> findBrowserDescriptionsUsingGET(@ApiParam(value = "branch",required=true) @PathVariable("branch") String branch,@ApiParam(value = "Accept-Language" ,required=true, defaultValue="en-US;q=0.8,en-GB;q=0.6") @RequestHeader(value="Accept-Language", required=true) String acceptLanguage,@ApiParam(value = "term") @Valid @RequestParam(value = "term", required = false) String term,@ApiParam(value = "conceptActive") @Valid @RequestParam(value = "conceptActive", required = false) Boolean conceptActive,@ApiParam(value = "offset", defaultValue = "0") @Valid @RequestParam(value = "offset", required = false, defaultValue="0") Integer offset,@ApiParam(value = "limit", defaultValue = "50") @Valid @RequestParam(value = "limit", required = false, defaultValue="50") Integer limit);


    @ApiOperation(value = "findDescriptions", nickname = "findDescriptionsUsingGET", notes = "", response = ItemsPageDescription.class, tags={ "Descriptions", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ItemsPageDescription.class),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/{branch}/descriptions",
        produces = "application/json", 
        consumes = "",
        method = RequestMethod.GET)
    ResponseEntity<ItemsPageDescription> findDescriptionsUsingGET(@ApiParam(value = "branch",required=true) @PathVariable("branch") String branch,@ApiParam(value = "Accept-Language" ,required=true) @RequestHeader(value="Accept-Language", required=true) String acceptLanguage,@ApiParam(value = "The concept id to match") @Valid @RequestParam(value = "concept", required = false) String concept,@ApiParam(value = "offset", defaultValue = "0") @Valid @RequestParam(value = "offset", required = false, defaultValue="0") Integer offset,@ApiParam(value = "limit", defaultValue = "50") @Valid @RequestParam(value = "limit", required = false, defaultValue="50") Integer limit);

}
